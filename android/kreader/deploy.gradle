apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def artifact = new Properties()
artifact.load(new FileInputStream("$projectDir/deploy.settings"))

version=artifact.version
group=artifact.groupId

install {
    repositories.mavenInstaller {
    pom.project {
            packaging 'aar'
            groupId artifact.groupId
            artifactId artifact.id
            version artifact.version
            name artifact.id
            url artifact.siteUrl
            licenses {
                license {
                    name artifact.license
                    url artifact.licenseUrl
                }
            }
            scm {
                    connection artifact.gitUrl
                    developerConnection artifact.gitUrl
                    url artifact.siteUrl
            }
        }
    }
}

Properties properties = new Properties()
File propFile = "${System.properties['user.home']}${File.separator}.gradle${File.separator}bintray.properties" as File
if (propFile.exists()) {
    properties.load(propFile.newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = "onyx-intl"
        repo = "maven"
        name = artifact.id
        websiteUrl = artifact.siteUrl
        vcsUrl = artifact.gitUrl
        licenses = ['Apache-2.0']
        publish = true
        version {
            name = artifact.version
        }
    }
}

task sourcesJar(type: Jar) {
    // we don't want to upload sources
    //from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    // java doc will contain class/methods we want to obfuscate, so we don't upload them
    //source = android.sourceSets.main.java.srcDirs
    //classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    //exclude '**/**.aidl'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    // java doc will contain class/methods we want to obfuscate, so we don't upload them
    //from javadoc.destinationDir
    classifier = 'javadoc'
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.2'
}