import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'



apply from: file(rootProject.projectDir.absolutePath + '/signing.gradle')

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        sourceSets.main {
            jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jniLibs
            jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
        }
        
        // call regular ndk-build(.cmd) script from app directory
        task ndkBuild(type: Exec) {
            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath, '-j10'
            } else {
                commandLine '/opt/adt-bundle-linux/ndk/ndk-build', '-C', file('src/main').absolutePath, '-j10'
            }
        }

        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn ndkBuild
        }

        task ndkClean(type: Exec) {
            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath, 'clean'
            } else {
                commandLine '/opt/adt-bundle-linux/ndk/ndk-build', '-C', file('src/main').absolutePath, 'clean'
            }
        }
        
        clean.dependsOn 'ndkClean'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../../proguard-rules.pro', 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
    }
}


dependencies {

    compile project(':libraries:onyxsdk-base')
    compile project(':libraries:onyxsdk-data')
    compile project(':libraries:onyxsdk-ui')
    compile project(':libraries:cropimage')
    compile (project(':libraries:onyxsdk-scribble')) {
        ['com.github.Raizlabs.DBFlow', 'com.alibaba'].each {
            exclude group: it
        }
    }

    compile (project(':libraries:chinese-analyzer')) {
        exclude group: 'org.apache.lucene', module: 'lucene-core'
    }

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.0.+'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:support-v4:23.0.+'
    compile 'com.alibaba:fastjson:1.1.34.android'
    compile 'net.lingala.zip4j:zip4j:1.3.2'
    compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'org.apache.lucene:lucene-core:2.9.4'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.jakewharton:butterknife:7.0.1'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}

