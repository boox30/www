package com.onyx.android.sdk.ui.dialog;import android.app.Dialog;import android.content.Context;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.ImageView;import android.widget.RadioButton;import android.widget.TextView;import com.onyx.android.sdk.ui.R;import com.onyx.android.sdk.ui.view.CommonViewHolder;import com.onyx.android.sdk.ui.view.PageRecyclerView;import java.util.ArrayList;import java.util.List;/** * Created by ming on 2016/11/16. */public class DialogFontChoose extends Dialog {    public interface OnChooseListener {        void onFinishChoose(String fontFace);    }    private PageRecyclerView fontPageView;    private Button btnOk;    private ImageView preIcon;    private TextView pageSizeIndicator;    private ImageView nextIcon;    private List<String> fonts = new ArrayList<>();    private int selectIndex = 0;    private OnChooseListener onChooseListener;    public DialogFontChoose(Context context, List<String> fonts, final OnChooseListener onChooseListener) {        super(context, R.style.CustomDialog);        this.fonts = fonts;        this.onChooseListener = onChooseListener;        setContentView(R.layout.reader_layer_menu_font_choose_view);        init();        initPageView();    }    private void init() {        fontPageView = (PageRecyclerView) findViewById(R.id.font_page_view);        btnOk = (Button) findViewById(R.id.btn_ok);        preIcon = (ImageView) findViewById(R.id.pre_icon);        pageSizeIndicator = (TextView) findViewById(R.id.page_size_indicator);        nextIcon = (ImageView) findViewById(R.id.next_icon);        btnOk.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (onChooseListener != null && fonts.size() > 0) {                    onChooseListener.onFinishChoose(fonts.get(selectIndex));                }                dismiss();            }        });        nextIcon.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                fontPageView.nextPage();            }        });        preIcon.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                fontPageView.prevPage();            }        });    }    private void initPageView() {        fontPageView.setAdapter(new PageRecyclerView.PageAdapter() {            @Override            public int getRowCount() {                return 6;            }            @Override            public int getColumnCount() {                return 1;            }            @Override            public int getDataCount() {                return fonts.size();            }            @Override            public RecyclerView.ViewHolder onPageCreateViewHolder(ViewGroup parent, int viewType) {                CommonViewHolder viewHolder = new CommonViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.reader_layer_menu_font_choose_item_view, parent, false));                return viewHolder;            }            @Override            public void onPageBindViewHolder(RecyclerView.ViewHolder holder, final int position) {                CommonViewHolder viewHolder = (CommonViewHolder) holder;                CheckBox font = viewHolder.getView(R.id.btn_font);                font.setText(fonts.get(position));                font.setChecked(selectIndex == position);                font.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        fontPageView.getPageAdapter().notifyItemChanged(selectIndex);                        selectIndex = position;                        fontPageView.getPageAdapter().notifyItemChanged(selectIndex);                    }                });            }        });        fontPageView.setOnPagingListener(new PageRecyclerView.OnPagingListener() {            @Override            public void onPageChange(int position, int itemCount, int pageSize) {                updatePageIndicator();            }        });    }    private void updatePageIndicator() {        String page = String.format("%d/%d", Math.max(1, fontPageView.getPaginator().getCurrentPage() + 1), Math.max(1, fontPageView.getPaginator().pages()));        pageSizeIndicator.setText(page);    }}