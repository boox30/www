package com.onyx.android.sdk.reader.tests;import android.app.Application;import android.database.Cursor;import android.net.Uri;import android.os.Handler;import android.test.ActivityInstrumentationTestCase2;import android.test.ApplicationTestCase;import android.util.Log;/** * Created by ming on 2016/11/5. */public class DictionaryQueryTest extends ApplicationTestCase<Application> {    private static final String TAG = "DictionaryQueryTest";    public static final int DICT_STATE_PARAM_ERROR = -1;    public static final int DICT_STATE_QUERY_SUCCESSFUL = 0;    public static final int DICT_STATE_QUERY_FAILED = 1;    public static final int DICT_STATE_LOADING = 2;    public DictionaryQueryTest() {        super(Application.class);    }    public void testDictionaryQuery() {        Uri CONTENT_URI = Uri.parse("content://com.onyx.dict.DictionaryProvider");        String []selectionArgs = new String[]{"good"};        Cursor cursor = getContext().getContentResolver().query(CONTENT_URI, null, null, selectionArgs, null);        if(cursor != null && cursor.moveToFirst()){            String[] columns = new String[] { "_id","state","keyword","explanation","dictPath","dictName","entryIndex"};            int column = cursor.getColumnIndex(columns[0]);            String id = cursor.getString(column);            column = cursor.getColumnIndex(columns[1]);            int state = cursor.getInt(column);            switch (state){                case DICT_STATE_PARAM_ERROR:                    break;                case DICT_STATE_QUERY_SUCCESSFUL:                    break;                case DICT_STATE_QUERY_FAILED:                    break;                case DICT_STATE_LOADING:                    Log.i(TAG,"DICT_STATE_LOADING");                    break;            }            column = cursor.getColumnIndex(columns[2]);            String keyword = cursor.getString(column);            column = cursor.getColumnIndex(columns[3]);            String explanation = cursor.getString(column);            Log.i(TAG,"state:" + state + ",return id:" + id + ",keyword" + keyword + ",explanation:" + explanation);        }    }}