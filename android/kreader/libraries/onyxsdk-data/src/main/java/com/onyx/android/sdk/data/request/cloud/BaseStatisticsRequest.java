package com.onyx.android.sdk.data.request.cloud;import android.util.Log;import com.alibaba.fastjson.JSON;import com.onyx.android.sdk.common.request.BaseCallback;import com.onyx.android.sdk.common.request.BaseRequest;import com.onyx.android.sdk.data.StatisticsCloudManager;import com.onyx.android.sdk.data.utils.ResultCode;import org.json.JSONObject;import retrofit2.Call;import retrofit2.Response;/** * Created by ming on 2017/2/17. */public abstract class BaseStatisticsRequest extends BaseRequest{    private static final String TAG = "BaseStatisticsRequest";    protected ResultCode resultCode;    public BaseStatisticsRequest() {        super();    }    public void beforeExecute(final StatisticsCloudManager parent) {        parent.acquireWakeLock(getContext(), getClass().getSimpleName());        benchmarkStart();        if (isAbort()) {        }        if (getCallback() == null) {            return;        }        final Runnable runnable = new Runnable() {            @Override            public void run() {                getCallback().start(BaseStatisticsRequest.this);            }        };        if (isRunInBackground()) {            parent.getLooperHandler().post(runnable);        } else {            runnable.run();        }    }    public abstract void execute(final StatisticsCloudManager parent) throws Exception;    /**     * must not throw out exception from the method     *     * @param parent     */    public void afterExecute(final StatisticsCloudManager parent) {        try {            afterExecuteImpl(parent);        } catch (Throwable tr) {            Log.w(TAG, tr);        } finally {            invokeCallback(parent);        }    }    private void afterExecuteImpl(final StatisticsCloudManager parent) throws Throwable {        dumpException();        benchmarkEnd();    }    private void invokeCallback(final StatisticsCloudManager parent) {        final Runnable runnable = new Runnable() {            @Override            public void run() {                BaseCallback.invoke(getCallback(), BaseStatisticsRequest.this, getException());                parent.releaseWakeLock();            }        };        if (isRunInBackground()) {            parent.getLooperHandler().post(runnable);        } else {            runnable.run();        }    }    private void invokeCallBackProgress(final StatisticsCloudManager parent, final BaseCallback.ProgressInfo progressInfo) {        final Runnable runnable = new Runnable() {            @Override            public void run() {                getCallback().progress(BaseStatisticsRequest.this, progressInfo);            }        };        if (isRunInBackground()) {            parent.getLooperHandler().post(runnable);        } else {            runnable.run();        }    }    private void dumpException() {        if (hasException()) {            Log.w(TAG, getException());        }    }    public void dumpMessage(final String tag, final String message) {        if (com.onyx.android.sdk.dataprovider.BuildConfig.DEBUG) {            Log.d(tag, message);        }    }    public void dumpMessage(final String tag, Throwable throwable, JSONObject errorResponse) {        if (throwable != null && throwable.getMessage() != null) {            dumpMessage(tag, throwable.getMessage());        }        if (errorResponse != null) {            dumpMessage(tag, errorResponse.toString());        }    }    protected <T> Response<T> executeCall(Call<T> call) throws Exception {        Response<T> response = call.execute();        if (!response.isSuccessful()) {            String errorBody = response.errorBody().string();            resultCode = JSON.parseObject(errorBody, ResultCode.class);            throw new Exception(errorBody);        }        return response;    }    public ResultCode getResultCode() {        return resultCode;    }}