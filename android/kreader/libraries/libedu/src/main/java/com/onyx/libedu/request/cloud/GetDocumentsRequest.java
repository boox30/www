package com.onyx.libedu.request.cloud;import com.onyx.android.sdk.data.utils.JSONObjectParseUtils;import com.onyx.libedu.BaseEduRequest;import com.onyx.libedu.EduCloudManager;import com.onyx.libedu.EduServiceFactory;import com.onyx.libedu.model.BookNode;import com.onyx.libedu.model.ChooseQuestionVariable;import com.onyx.libedu.model.Document;import com.onyx.libedu.model.Result;import org.json.JSONObject;import java.util.List;import java.util.Map;import retrofit2.Call;import retrofit2.Response;import static com.onyx.libedu.Constant.INVALID_VALUE;/** * Created by ming on 2016/11/1. */public class GetDocumentsRequest extends BaseEduRequest{    private List<Document> documents;    private ChooseQuestionVariable variable;    private long startPage = 0;    private long countPerPage = 10;    private long bookNodeId1 = INVALID_VALUE;    private long bookNodeId2 = INVALID_VALUE;    private long bookNodeId3 = INVALID_VALUE;    public GetDocumentsRequest(ChooseQuestionVariable variable) {        this.variable = variable;    }    @Override    public void execute(EduCloudManager parent) throws Exception {        Map<String, Object> paramMap = parent.createParamMap();        paramMap.put("subjectId", variable.getSubject().getId());        paramMap.put("versionId", variable.getVersion().getId());        paramMap.put("textbookId", variable.getTextbook().getId());        paramMap.put("type", variable.getDocumentType());        paramMap.put("startPage", startPage);        paramMap.put("countPerPage", countPerPage);        if (bookNodeId1 != INVALID_VALUE) {            paramMap.put("bookNodeId1", bookNodeId1);        }        if (bookNodeId2 != INVALID_VALUE) {            paramMap.put("bookNodeId2", bookNodeId2);        }        if (bookNodeId3 != INVALID_VALUE) {            paramMap.put("bookNodeId3", bookNodeId3);        }        parent.sign(paramMap);        Call<Result<List<Document>>> call = EduServiceFactory.getEduService(parent.getEduConf().getApiBase()).getDocumentList(paramMap);        Response<Result<List<Document>>> response = call.execute();        if (response.isSuccessful()) {            Result<List<Document>> result = response.body();            documents = result.getData();        } else {            String errorCode = JSONObjectParseUtils.httpStatus(response.code(), new JSONObject(response.errorBody().string()));            throw new Exception(errorCode);        }    }    public List<Document> getDocuments() {        return documents;    }}