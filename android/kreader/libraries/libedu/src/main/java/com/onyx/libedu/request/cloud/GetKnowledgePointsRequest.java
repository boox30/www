package com.onyx.libedu.request.cloud;import com.onyx.android.sdk.data.utils.JSONObjectParseUtils;import com.onyx.libedu.BaseEduRequest;import com.onyx.libedu.EduCloudManager;import com.onyx.libedu.EduServiceFactory;import com.onyx.libedu.model.BookNode;import com.onyx.libedu.model.KnowledgePoint;import com.onyx.libedu.model.Result;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;import java.util.Map;import retrofit2.Call;import retrofit2.Response;/** * Created by ming on 2016/11/1. */public class GetKnowledgePointsRequest extends BaseEduRequest{    private long subjectId;    private List<KnowledgePoint> knowledgePoints;    public GetKnowledgePointsRequest(long subjectId) {        this.subjectId = subjectId;    }    @Override    public void execute(EduCloudManager parent) throws Exception {        Map<String, Object> paramMap = parent.createParamMap();        paramMap.put("subjectId", subjectId);        parent.sign(paramMap);//        Call<Result<List<KnowledgePoint>>> call = EduServiceFactory.getEduService(parent.getEduConf().getApiBase()).getKnowledgePointList(paramMap);//        Response<Result<List<KnowledgePoint>>> response = call.execute();//        if (response.isSuccessful()) {//            Result<List<KnowledgePoint>> result = response.body();////            knowledgePoints = result.getData();//        } else {////            String errorCode = JSONObjectParseUtils.httpStatus(response.code(), new JSONObject(response.errorBody().string()));////            throw new Exception(errorCode);//        }        knowledgePoints = createTestData();    }    public static List<KnowledgePoint> createTestData() {        KnowledgePoint point = new KnowledgePoint();        point.setParentId(0);        point.setId(1);        point.setName("基础知识");        KnowledgePoint child = new KnowledgePoint();        child.setParentId((int)point.getId());        child.setId(2);        child.setName("Java语法");        point.getChildrens().add(child);        ArrayList<KnowledgePoint> points = new ArrayList<>();        points.add(point);        return points;    }    public List<KnowledgePoint> getKnowledgePoints() {        return knowledgePoints;    }}